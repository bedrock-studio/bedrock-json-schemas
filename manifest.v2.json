{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://bedrock-studio.github.io/bedrock-json-schemas/manifest.v2.json",
    "title": "Manifest",
    "description": "The manifest for a Minecraft Bedrock Edition Add-On.",
    "$comment": "https://docs.microsoft.com/en-us/minecraft/creator/reference/content/addonsreference/examples/addonmanifest",
    "type": "object",
    "properties": {
        "format_version": {
            "description": "The syntax version used in the manifest file. This may be 1 for skin packs or 2 for resource, behavior, and world packs.",
            "type": "integer",
            "const": 2
        },
        "header": {
            "description": "Section containing information regarding the name of the pack, description, and other features that are public facing.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "This is the name of the pack as it appears within Minecraft. This is a required field.",
                    "type": "string"
                },
                "description": {
                    "description": "This is a short description of the pack. It will appear in the game below the name of the pack. We recommend keeping it to 1-2 lines.",
                    "type": "string"
                },
                "uuid": {
                    "description": "This is a special type of identifier that uniquely identifies this pack from any other pack. UUIDs are written in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx where each x is a hexadecimal value (0-9 or a-f). We recommend using an online service to generate this and guarantee their uniqueness.",
                    "$ref": "meta.json#/definitions/uuid"
                },
                "version": {
                    "description": "This is the version of your pack in the format [majorVersion, minorVersion, revision]. The version number is used when importing a pack that has been imported before. The new pack will replace the old one if the version is higher, and ignored if it's the same or lower.",
                    "$ref": "meta.json#/definitions/version"
                },
                "min_engine_version": {
                    "description": "This is the minimum version of the game that this pack was written for. This is a required field for resource and behavior packs. This helps the game identify whether any backwards compatibility is needed for your pack. You should always use the highest version currently available when creating packs.",
                    "$ref": "meta.json#/definitions/version"
                },
                "lock_template_options": {
                    "description": "This option is required for any world templates. This will lock the player from modifying the options of the world.",
                    "type": "boolean"
                },
                "base_game_version": {
                    "description": "This is the version of the base game your world template requires, specified as [majorVersion, minorVersion, revision]. We use this to determine what version of the base game resource and behavior packs to apply when your content is used.",
                    "$ref": "meta.json#/definitions/version"
                }
            },
            "required": [
                "name"
            ],
            "additionalProperties": false
        },
        "modules": {
            "description": "Section containing information regarding the type of content that is being brought in.",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "uuid": {
                                "description": "This is a unique identifier for the module in the same format as the pack's UUID in the header. This should be different from the pack's UUID, and different for every module.",
                                "$ref": "meta.json#/definitions/uuid"
                            },
                            "description": {
                                "description": "This is a short description of the module. This is not user-facing at the moment but is a good place to remind yourself why the module is defined.",
                                "type": "string"
                            },
                            "version": {
                                "description": "This is the version of the module in the same format as the pack's version in the header. This can be used to further identify changes in your pack.",
                                "$ref": "meta.json#/definitions/version"
                            },
                            "type": {
                                "description": "This is the type of the module. Can be any of the following: `resources`, `data`, `client_data`, `interface`, `world_template` or `javascript`.",
                                "type": "string",
                                "enum": [
                                    "resources",
                                    "data",
                                    "client_data",
                                    "interface",
                                    "world_template",
                                    "javascript"
                                ]
                            }
                        },
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "properties": {
                            "uuid": {
                                "description": "This is a unique identifier for the module in the same format as the pack's UUID in the header. This should be different from the pack's UUID, and different for every module.",
                                "$ref": "meta.json#/definitions/uuid"
                            },
                            "description": {
                                "description": "This is a short description of the module. This is not user-facing at the moment but is a good place to remind yourself why the module is defined.",
                                "type": "string"
                            },
                            "version": {
                                "description": "This is the version of the module in the same format as the pack's version in the header. This can be used to further identify changes in your pack.",
                                "$ref": "meta.json#/definitions/version"
                            },
                            "type": {
                                "description": "This is the type of the module. Can be any of the following: `resources`, `data`, `client_data`, `interface`, `world_template` or `javascript`.",
                                "type": "string",
                                "const": "script"
                            },
                            "language": {
                                "description": "The script language.",
                                "type": "string",
                                "const": "javascript"
                            },
                            "entry": {
                                "description": "The entry point of the script.",
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            }
        },
        "dependencies": {
            "description": "Section containing definitions for any other packs that are required in order for this manifest.json file to work.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "description": "This is the unique identifier of the pack that this pack depends on. It needs to be the exact same UUID that the pack has defined in the header section of it's manifest file.",
                        "$ref": "meta.json#/definitions/uuid"
                    },
                    "version": {
                        "description": "This is the specific version of the pack that your pack depends on. Should match the version the other pack has in its manifest file.",
                        "$ref": "meta.json#/definitions/version"
                    }
                },
                "additionalProperties": false
            }
        },
        "capabilities": {
            "description": "Section containing optional features that can be enabled in Minecraft.",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "const": "experimental_custom_ui",
                        "description": "The pack can use HTML files to create custom UI, as well as use or modify the custom UI."
                    },
                    {
                        "const": "chemistry",
                        "description": "The pack can add, remove, or modify chemistry behavior."
                    },
                    {
                        "const": "raytraced",
                        "description": "The pack uses Ray Tracking functionality and may use custom shaders."
                    }
                ]
            },
            "uniqueItems": true
        },
        "metadata": {
            "description": "Section containing the metadata about the file such as authors and licensing information.",
            "type": "object",
            "properties": {
                "authors": {
                    "description": "Name of the author(s) of the pack",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "license": {
                    "description": "The license of the pack",
                    "type": "string"
                },
                "generated_with": {
                    "description": "The tools used to generate a manifest.json file. The tool names are strings that must be [a-zA-Z0-9_-] and 32 characters maximum. The tool version numbers are semver strings for each version that modified the manifest.json file.",
                    "type": "object",
                    "patternProperties": {
                        "^[a-zA-Z0-9_-]{1,32}$": {
                            "type": "array",
                            "items": {
                                "$ref": "meta.json#/definitions/semver_string"
                            }
                        }
                    }
                },
                "url": {
                    "description": "The home website of your pack",
                    "type": "string",
                    "format": "uri"
                }
            },
            "additionalProperties": false
        }
    },
    "required": [
        "format_version",
        "header"
    ],
    "additionalProperties": false
}
